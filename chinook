In this SQL code, I am querying a dataset called chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.

1. Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT FirstName, LastName, CustomerID, Country
from customers
WHERE Country <>'USA';

2.Show only the Customers from Brazil.

SELECT FirstName, LastName, CustomerID 
FROM customers
WHERE Country='Brazil';

3.Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT c.FirstName, c.LastName, c.Country, i.InvoiceID ,i.InvoiceDate, i.BillingCountry 
FROM customers c
JOIN invoices i
ON c.CustomerID=i.CustomerID
WHERE Country="Brazil";

4. Show the Employees who are Sales Agents.

SELECT FirstName, LastName, Title FROM employees
WHERE Title= 'Sales Support Agent'

5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT distinct BillingCountry FROM invoices;

6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT e.FirstName ||" "|| e.LastName AS Employee_Name, i.Invoiceid 
FROM customers c
LEFT JOIN invoices i
ON i.Invoiceid=c.Customerid
LEFT JOIN employees e
ON c.SupportRepid=e.Employeeid;

7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT i.Total, 
c.FirstName ||" "|| c.LastName AS Customer_Name, 
c.Country,  
e.FirstName ||' '|| e.LastName AS Employee_Name,
e.Title 
FROM customers c
LEFT JOIN invoices i
ON c.Customerid=i.Customerid
LEFT JOIN employees e
ON e.Employeeid=c.SupportRepid;

8.How many Invoices were there in 2009?

SELECT COUNT(InvoiceDate)
FROM invoices
WHERE InvoiceDate LIKE '2009%';

9. What are the total sales for 2009?

SELECT ROUND(SUM(Total)) AS Total_Sales_2009 FROM invoices
WHERE InvoiceDate LIKE '2009%';
--or
SELECT SUM(Total) as '2009 Sales Total'
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' 
AND '2009-12-31';

10. Write a query that includes the purchased track name with each invoice line ID.

SELECT t.Name AS track_name,
i.invoicelineid from tracks t
LEFT JOIN invoice_items i
ON t.Trackid=i.Trackid

11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT t.Name AS track_name,
ar.Name AS artist_name,
inv.invoicelineid 
from invoice_items inv
LEFT JOIN tracks t
ON inv.Trackid=t.Trackid
LEFT JOIN albums al
ON al.Albumid=t.Albumid
LEFT JOIN artists ar
ON ar.Artistid=al.Artistid;

12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS TrackName, 
al.Title AS AlbumTitle, 
g.Name AS Genre, 
m.Name AS MediaType
FROM tracks t 
LEFT JOIN albums al
ON t.Albumid=al.Albumid
LEFT JOIN genres g
ON g.Genreid=t.Genreid
LEFT JOIN media_types m
ON t.MediaTypeId=m.MediaTypeId

13. Show the total sales made by each sales agent.
SELECT e.employeeid, e.FirstName ||" "|| e.LastName AS FullName, 
COUNT(i.Total) AS TotalSales
FROM employees e
LEFT JOIN customers c
ON e.Employeeid=c.SupportRepid
LEFT JOIN invoices i
ON c.Customerid=i.Customerid
WHERE e.Title='Sales Support Agent'
GROUP BY e.employeeid;

14. Which sales agent made the most dollars in sales in 2009?

WITH CTE_Sales AS(
SELECT e.FirstName, e.LastName, SUM(i.Total) AS Sum_of_Sales
FROM employees e
LEFT JOIN customers c
ON e.EmployeeId=c.SupportRepId
LEFT JOIN invoices i
ON c.CustomerId=i.CustomerId
WHERE e.Title= 'Sales Support Agent' 
AND InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
GROUP BY e.FirstName, e.LastName)

SELECT FirstName, LastName, ROUND(MAX(Sum_of_Sales),2) 
FROM CTE_Sales;

--or--

SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total),2) AS 'Total Sales'
FROM chinook.employees e
JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i
ON c.customerid = i.customerid
WHERE e.title = 'Sales Support Agent'
AND i.invoicedate LIKE '%2009%'
GROUP BY e.FirstName
ORDER BY ROUND(SUM(i.Total),2) DESC
LIMIT 1;
